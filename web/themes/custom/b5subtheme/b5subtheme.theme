<?php

/**
 * @file
 * B5 subtheme theme file.
 */

use Drupal\file\Entity\File;

/**
 * Implements hook_preprocess_HOOK().
 */
function b5subtheme_preprocess_node(&$variables) {

  if ($node = \Drupal::routeMatch()->getParameter('node')) {

    if ($node->getType() === 'news') {

      if (!$node->hasField('field_images')) {
        return;
      }

      foreach ($node->get('field_images')->getValue() as $key => $value) {

        if($value['target_id']){
          $image = $value['target_id'];
          $image = \Drupal::entityTypeManager()->getStorage('file')->load($value['target_id'])->getFileUri();
          $image_url = \Drupal::service('file_url_generator')->generateAbsoluteString($image);
          $variables['variable_images'][] = $image_url;
        }

      }

      if (!$node->hasField('field_files')) {
        return;
      }

      foreach ($node->get('field_files')->getValue() as $key => $value) {
        if($value['target_id'] && $value['display']){
          $file = $value['target_id'];
          $file = \Drupal::entityTypeManager()->getStorage('file')->load($value['target_id'])->getFileUri();
          $file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file);
          $variables['variable_files'][$file_url] = $value;
        }

      }

    }

    if ($node->getType() === 'document') {

      if (!$node->hasField('field_files')) {
        return;
      }

      foreach ($node->get('field_files')->getValue() as $key => $value) {
        if($value['target_id'] && $value['display']){
          $file = $value['target_id'];
          $file = \Drupal::entityTypeManager()->getStorage('file')->load($value['target_id'])->getFileUri();
          $file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file);
          $variables['variable_files'][$file_url] = $value;
        }

      }

    }




    if ($node->getType() === 'dokument_gradske_uprave') {

      if (!$node->hasField('field_files')) {
        return;
      }

      foreach ($node->get('field_files')->getValue() as $key => $value) {
        if($value['target_id'] && $value['display']){
          $file = $value['target_id'];
          $file = \Drupal::entityTypeManager()->getStorage('file')->load($value['target_id'])->getFileUri();
          $file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file);
          $variables['variable_files'][$file_url] = $value;
        }

      }

    }


    if ($node->getType() === 'clan_gradskog_veca') {

      if (!$node->hasField('field_images')) {
        return;
      }

      foreach ($node->get('field_images')->getValue() as $key => $value) {

        if($value['target_id']){
          $image = $value['target_id'];
          $image = \Drupal::entityTypeManager()->getStorage('file')->load($value['target_id'])->getFileUri();
          $image_url = \Drupal::service('file_url_generator')->generateAbsoluteString($image);
          $variables['variable_images'][] = $image_url;
        }

      }

      if (!$node->hasField('field_files')) {
        return;
      }

      foreach ($node->get('field_files')->getValue() as $key => $value) {
        if($value['target_id'] && $value['display']){
          $file = $value['target_id'];
          $file = \Drupal::entityTypeManager()->getStorage('file')->load($value['target_id'])->getFileUri();
          $file_url = \Drupal::service('file_url_generator')->generateAbsoluteString($file);
          $variables['variable_files'][$file_url] = $value;
        }

      }

    }


  }

}

/**
 * Implements hook_preprocess_HOOK().
 */
function b5subtheme_preprocess_block(&$variables) {

  //$block_id = $variables['elements']['#id'];
  //$block = \Drupal\block\Entity\Block::load($block_id);

  //if ($block->getRegion() === 'content_bottom') {
  //  $variables['region'] = $block->getRegion();
  //  $variables['theme_hook_suggestions'][] = 'block__block_content.html.twig';
  //}

}

function b5subtheme_suggestions_block_alter(array &$suggestions, array $variables) {

  //if (!empty($variables['elements']['#id'])) {
  //  $block = Block::load($variables['elements']['#id']);
  //  $suggestions[] = 'block__' . $block->getRegion() . '__' . $variables['elements']['#id'];
  //}
  /* Use this 'else if' only if you are using page_manager module and want to know which region is the block */
  //else if (isset($variables['elements']['#configuration']['region'])) {
  //  $suggestions[] = 'block__page_' . $variables['elements']['#configuration']['region'] . '__' . end(explode(':', $variables['elements']['#plugin_id']));
  //}
  //return $suggestions;

}
